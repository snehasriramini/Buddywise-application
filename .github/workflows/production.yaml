name: Buddywise CI/CD
on:
 push:
 branches:
 - 'main'

jobs:
 build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          python -m pip install --upgrade pip setuptools wheel
          pip install --only-binary :all: greenlet
          sudo apt-get install -y build-essential python3-dev python3-pip python3-venv \
                                  g++ libffi-dev libssl-dev
      - name: Build Backend (Python)
        working-directory: backend
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt   
          
      - name: Build Docker Images
        run: |
          docker build -t buddywise-application-frontend:latest ./frontend
          docker build -t buddywise-application-backend:latest ./backend

      - name: Push Docker Images to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag buddywise-application-frontend mydockerhub/buddywise-application-frontend:${{ github.sha }}
          docker tag buddywise-application-backend mydockerhub/buddywise-application-backend:${{ github.sha }}
          docker push mydockerhub/buddywise-application-frontend:${{ github.sha }}
          docker push mydockerhub/buddywise-application-backend:${{ github.sha }}

 deploy:
    runs-on: ubuntu-latest
    needs: build
    steps: 
      - name: Set up kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig
          export KUBECONFIG=./kubeconfig

      - name: Deploy to Kubernetes (Production)
        if: github.ref == 'refs/heads/main'
        run: |
          kubectl apply -f k8s/prod-deployment.yaml`
